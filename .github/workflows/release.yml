name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Get tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Verify version matches tag
        id: version
        run: |
          TAG_VERSION="${{ steps.tag.outputs.tag }}"
          TAG_VERSION_NUMBER=${TAG_VERSION#v}  # Remove 'v' prefix
          TAURI_VERSION=$(node -p "require('./src-tauri/tauri.conf.json').version")
          
          if [ "$TAG_VERSION_NUMBER" != "$TAURI_VERSION" ]; then
            echo "Error: Git tag version ($TAG_VERSION_NUMBER) does not match tauri.conf.json version ($TAURI_VERSION)"
            exit 1
          fi
          
          echo "✅ Version check passed: $TAURI_VERSION"
          echo "version_number=$TAG_VERSION_NUMBER" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: npm ci

      - name: Cache Tauri build dependencies
        uses: actions/cache@v4
        with:
          path: src-tauri/target
          key: ${{ runner.os }}-tauri-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-tauri-

      - name: Build npm dependencies
        run: npm run build

      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ hashFiles('package-lock.json') }}-${{ hashFiles('src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('package-lock.json') }}-
            ${{ runner.os }}-build-

      - name: Build Tauri app for Apple Silicon
        run: npm run tauri build -- --target aarch64-apple-darwin

      - name: Sign app and DMG (ad-hoc)
        run: |
          # Sign the app bundle
          codesign --force --deep --sign - "src-tauri/target/aarch64-apple-darwin/release/bundle/macos/T3 Chat.app"
          # Remove quarantine attributes from the DMG
          xattr -cr "src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/"*.dmg || true

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: T3 Chat ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
          files: |
            ./src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/T3 Chat_${{ steps.version.outputs.version_number }}_aarch64.dmg
          body: |
            ## What's Changed
            
            Release ${{ steps.tag.outputs.tag }} of T3 Chat desktop app.
            
            ### Downloads
            - **macOS Apple Silicon**: Download the `.dmg` file below
            
            ### Installation
            1. Download the `.dmg` file below
            2. Open the downloaded file
            3. Drag T3 Chat to your Applications folder
            4. **Important**: Right-click the app in Applications → "Open" (first time only)
            5. Click "Open" when macOS asks for confirmation
            
            If you still get a "damaged" error, run this command in Terminal:
            ```
            xattr -cr "/Applications/T3 Chat.app"
            ```
            
            **Note**: This app uses ad-hoc signing for free distribution. The security warning is normal for apps not distributed through the App Store.
